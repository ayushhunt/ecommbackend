// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Test {
  id    Int     @id @default(autoincrement())
  name  String
  email String
}

model User {
  id            String    @id @default(uuid())
  provider      String    // "email", "google", "github"
  providerId    String?   // Nullable for email users
  email         String    @unique
  passwordHash  String?   // Nullable for SSO users
  verified      Boolean   @default(false)
  name          String?
  role          String    @default("user") // "user", "admin"
  phoneNumber   String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  addresses     Address[]
  Verification  Verification[]
  RefreshToken RefreshToken[]
}


model Address {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  street    String
  phoneNumber   String?
  city      String
  state     String
  zip       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
}


model Verification {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  type     String   
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}


